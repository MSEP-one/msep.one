[gd_scene load_steps=20 format=3 uid="uid://jq1733orco5o"]

[ext_resource type="PackedScene" uid="uid://c6gt8vvh1iisr" path="res://editor/controls/ring_menu/ring_menu_icon/ring_menu_icon.tscn" id="1_y8dpp"]
[ext_resource type="Script" uid="uid://di2acfniwfy8q" path="res://editor/controls/ring_menu/ring_menu_icon/ring_menu_atom_icon/ring_menu_atom_icon.gd" id="2_0dehc"]
[ext_resource type="Texture2D" uid="uid://cu5nnpewjlepr" path="res://editor/rendering/atomic_structure_renderer/representation/sphere_representation/assets/inner_rim.png" id="3_on6hq"]
[ext_resource type="Texture2D" uid="uid://c5p7jdrmkycg1" path="res://editor/rendering/atomic_structure_renderer/representation/sphere_representation/assets/atom_noise_atlas.png" id="4_4w36a"]
[ext_resource type="PackedScene" uid="uid://ci70112ruoqau" path="res://editor/controls/ring_menu/ring_menu_icon/ring_menu_atom_icon/2dNodeIn3DWorld/2d_node_in_3d_world.tscn" id="5_23snn"]
[ext_resource type="ArrayMesh" uid="uid://bmjxk4oieq5pr" path="res://editor/rendering/atomic_structure_renderer/representation/sphere_representation/assets/sphere_half.mesh" id="5_ff2eh"]
[ext_resource type="Texture2D" uid="uid://dqlk3rj55mhbj" path="res://editor/controls/ring_menu/nano_ring_menu/ring_menu_ui/ring_menu_3d/side_button/assets/back_ico.png" id="6_5mkvu"]
[ext_resource type="FontFile" uid="uid://mw18m2voq6sc" path="res://theme/noto_sans/NotoSansNagMundari-Bold.ttf" id="7_i0n75"]

[sub_resource type="Shader" id="Shader_0h6t6"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.1.rc's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

// wavy uv
const float wave_aplitude = 0.05;
const float wave_frequency = 3.230;
const float wave_aplitude_x = 0.08;
const float wave_frequency_x = 7.000;

//
const float DETAIL_POWER = 1.0;
const float COLOR_ADDITIONAL_POWER = 0.05;
const float ATLAS_SIZE_XY = 4.0;
const float UV_ATLAS_SIZE = 1.0 / ATLAS_SIZE_XY;

uniform float atlas_id: hint_range(0, 15, 1);
uniform vec4 noise_albedo : source_color;
uniform vec4 albedo : source_color;
uniform sampler2D texture_noise : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform float clearcoat : hint_range(0,1);
uniform float clearcoat_roughness : hint_range(0,1);
uniform sampler2D texture_clearcoat : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_detail_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_detail_normal : hint_normal,filter_linear_mipmap,repeat_enable;
uniform sampler2D texture_detail_mask : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


vec2 wave(vec2 uv, float time) {
	float speed_y = 1.0;
	float speed_x = 0.8;
	uv.y += wave_aplitude * sin(wave_frequency * (uv.x + time * speed_y));
	uv.x += wave_aplitude_x * sin(wave_frequency_x * (uv.y + time * speed_x));
	return uv;
}


vec3 srgb(vec3 in_color) {
	return mix(pow((in_color + vec3(0.055)) * (1.0 / (1.0 + 0.055)), vec3(2.4)), in_color * (1.0 / 12.92), lessThan(in_color, vec3(0.04045)));
}


void vertex() {
	if (!OUTPUT_IS_SRGB) {
		COLOR.rgb = mix(pow((COLOR.rgb + vec3(0.055)) * (1.0 / (1.0 + 0.055)), vec3(2.4)), COLOR.rgb * (1.0 / 12.92), lessThan(COLOR.rgb, vec3(0.04045)));
	}
	
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], INV_VIEW_MATRIX[1], INV_VIEW_MATRIX[2], MODEL_MATRIX[3]);
	MODELVIEW_MATRIX = MODELVIEW_MATRIX * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
	UV2=UV2*uv2_scale.xy+uv2_offset.xy;
}


void fragment() {
	
	// this factor value is arbitrary, the shader don't give exact the same results color wise as it's multimesh counterpart (not sure why)
	// and it's to mitigate that problem a little (brightness is right now, but it's slightly different tone)
	vec4 final_noise_albedo = noise_albedo * 1.15;
	
	vec2 atlas_pos = vec2(mod(atlas_id, ATLAS_SIZE_XY), floor(atlas_id / ATLAS_SIZE_XY)) * UV_ATLAS_SIZE;
	//do not use edge pixels, prevents floating point problems on the edges
	vec4 atlas_uv = vec4(atlas_pos + 0.001, UV_ATLAS_SIZE - 0.002, UV_ATLAS_SIZE - 0.002);
	vec2 base_uv = atlas_uv.xy + atlas_uv.zw * fract(wave(UV, TIME * 0.05));
	
	vec2 base_uv2 = UV2;
	vec4 noise_tex = texture(texture_noise,base_uv);
	noise_tex.rgb = mix(pow((noise_tex.rgb + vec3(0.055)) * (1.0 / (1.0 + 0.055)),vec3(2.4)),noise_tex.rgb.rgb * (1.0 / 12.92),lessThan(noise_tex.rgb,vec3(0.04045)));
	noise_tex *= final_noise_albedo;
	
	//
	ALBEDO = albedo.rgb + albedo.rgb * COLOR_ADDITIONAL_POWER;
	
	//noise tex is an addon to base color
	noise_tex *= final_noise_albedo;
	vec3 albedofinal = mix(ALBEDO.rgb,ALBEDO.rgb+noise_tex.rgb,noise_tex.a);
	ALBEDO.rgb = albedofinal.rgb;
	
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec2 rim_tex = texture(texture_rim,base_uv).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
	vec2 clearcoat_tex = texture(texture_clearcoat,base_uv).xy;
	CLEARCOAT = clearcoat*clearcoat_tex.x;	CLEARCOAT_ROUGHNESS = clearcoat_roughness*clearcoat_tex.y;
	vec4 detail_tex = texture(texture_detail_albedo,base_uv2);
	vec4 detail_norm_tex = texture(texture_detail_normal,base_uv2);
	vec4 detail_mask_tex = texture(texture_detail_mask,base_uv);
	vec3 detail = mix(ALBEDO.rgb,ALBEDO.rgb+detail_tex.rgb * DETAIL_POWER,detail_tex.a);
	vec3 detail_norm = mix(NORMAL_MAP,detail_norm_tex.rgb,detail_tex.a);
	NORMAL_MAP = mix(NORMAL_MAP,detail_norm,detail_mask_tex.r);
	ALBEDO.rgb = mix(ALBEDO.rgb,detail,detail_mask_tex.r);
}

"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xshyi"]
render_priority = 0
shader = SubResource("Shader_0h6t6")
shader_parameter/atlas_id = 0.0
shader_parameter/noise_albedo = Color(0.709804, 0.184314, 0.831373, 1)
shader_parameter/albedo = Color(0, 0, 0, 1)
shader_parameter/texture_noise = ExtResource("4_4w36a")
shader_parameter/point_size = 0.0
shader_parameter/roughness = 0.75
shader_parameter/metallic_texture_channel = Vector4(0, 0, 0, 0)
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/rim = 1.0
shader_parameter/rim_tint = 0.0
shader_parameter/clearcoat = 1.0
shader_parameter/clearcoat_roughness = 1.0
shader_parameter/texture_detail_albedo = ExtResource("3_on6hq")
shader_parameter/uv1_scale = Vector3(1.1, 1.1, 1.1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="LabelSettings" id="LabelSettings_p06et"]
resource_local_to_scene = true
line_spacing = 0.0
font = ExtResource("7_i0n75")
font_size = 35
font_color = Color(0.756863, 0.768627, 0.945098, 1)
outline_size = 7
outline_color = Color(0.160784, 0.14902, 0.360784, 1)

[sub_resource type="Animation" id="Animation_au2o3"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:label_settings:font_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.756863, 0.768627, 0.945098, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:label_settings:outline_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.160784, 0.14902, 0.360784, 1)]
}

[sub_resource type="Animation" id="Animation_4886e"]
resource_name = "in"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:label_settings:font_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0.756863, 0.768627, 0.945098, 1), Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:label_settings:outline_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0.160784, 0.14902, 0.360784, 1), Color(0.627451, 0.639216, 0.905882, 1)]
}

[sub_resource type="Animation" id="Animation_nbwyt"]
resource_name = "out"
length = 0.3
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:label_settings:font_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.756863, 0.768627, 0.945098, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:label_settings:outline_color")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.2),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0.627451, 0.639216, 0.905882, 1), Color(0.160784, 0.14902, 0.360784, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4175v"]
_data = {
&"RESET": SubResource("Animation_au2o3"),
&"in": SubResource("Animation_4886e"),
&"out": SubResource("Animation_nbwyt")
}

[sub_resource type="Animation" id="Animation_poon5"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_vq5pw"]
resource_name = "in"
length = 0.35
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.3),
"transitions": PackedFloat32Array(0.5, -2, -2),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(1.05, 1.05, 1.05), Vector3(1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.15, 0.35),
"transitions": PackedFloat32Array(-1.86607, -1.86607, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_ljfnd"]
resource_name = "out"
length = 0.25
step = 0.05
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.25),
"transitions": PackedFloat32Array(-2, -2, 0.5),
"update": 0,
"values": [Vector3(1, 1, 1), Vector3(1.05, 1.05, 1.05), Vector3(0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PreviewInstance/2DNodeIn3DWorld/Label:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_gam3m"]
_data = {
&"RESET": SubResource("Animation_poon5"),
&"in": SubResource("Animation_vq5pw"),
&"out": SubResource("Animation_ljfnd")
}

[node name="RingMenuAtomIcon" instance=ExtResource("1_y8dpp")]
script = ExtResource("2_0dehc")

[node name="PreviewInstance" type="MeshInstance3D" parent="." index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.006, 0.015)
layers = 2
material_override = SubResource("ShaderMaterial_xshyi")
cast_shadow = 0
mesh = ExtResource("5_ff2eh")
skeleton = NodePath("")

[node name="2DNodeIn3DWorld" parent="PreviewInstance" index="0" node_paths=PackedStringArray("follow_target") instance=ExtResource("5_23snn")]
follow_target = NodePath("..")

[node name="Sprite2D" type="Sprite2D" parent="PreviewInstance/2DNodeIn3DWorld" index="0"]
visible = false
texture = ExtResource("6_5mkvu")

[node name="Label" type="Label" parent="PreviewInstance/2DNodeIn3DWorld" index="1"]
modulate = Color(1, 1, 1, 0)
offset_left = -45.0
offset_top = -33.0
offset_right = 46.0
offset_bottom = 33.0
text = "H"
label_settings = SubResource("LabelSettings_p06et")
horizontal_alignment = 1
vertical_alignment = 1

[node name="HighlightSpotLight" type="SpotLight3D" parent="PreviewInstance" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.57659, 3.01961)
light_energy = 25.0
light_cull_mask = 4294443008
spot_attenuation = 3.73213
spot_angle = 80.0
spot_angle_attenuation = 6.96439

[node name="PressAnimator" type="AnimationPlayer" parent="." index="1"]
libraries = {
"": SubResource("AnimationLibrary_4175v")
}

[node name="FadeAnimator" type="AnimationPlayer" parent="." index="2"]
libraries = {
"": SubResource("AnimationLibrary_gam3m")
}
